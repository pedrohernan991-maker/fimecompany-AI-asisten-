#!/usr/bin/env powershell
# üöÄ FIME COMPANY - DEPLOYMENT AUTOM√ÅTICO A GITHUB Y CPANEL
# =========================================================

Write-Host "üöÄ INICIANDO DEPLOYMENT AUTOM√ÅTICO..." -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "=====================================" -ForegroundColor Yellow

# PASO 1: Preparar archivos
Write-Host ""
Write-Host "üìÅ PASO 1: PREPARANDO ARCHIVOS..." -ForegroundColor Cyan
Write-Host "================================" -ForegroundColor Yellow

# Asegurar que estamos en el directorio correcto
Set-Location "C:\Users\PC\.android\c panel"

# PASO 2: Agregar todos los archivos
Write-Host ""
Write-Host "üì¶ PASO 2: AGREGANDO ARCHIVOS A GIT..." -ForegroundColor Cyan
Write-Host "======================================" -ForegroundColor Yellow

git agregar .
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Archivos agregados correctamente" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Usando comando est√°ndar..." -ForegroundColor Yellow
    git add .
}

# PASO 3: Crear commit en espa√±ol
Write-Host ""
Write-Host "üíæ PASO 3: CREANDO COMMIT EN ESPA√ëOL..." -ForegroundColor Cyan
Write-Host "=======================================" -ForegroundColor Yellow

$commitMessage = "üöÄ FIME COMPANY - Proyecto completo con automatizaci√≥n cPanel"
git confirmar -m $commitMessage
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  Usando comando est√°ndar..." -ForegroundColor Yellow
    git commit -m $commitMessage
}

# PASO 4: Crear repositorio en GitHub
Write-Host ""
Write-Host "üåç PASO 4: CREANDO REPOSITORIO EN GITHUB..." -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Yellow

$repoName = "fime-company-automatizado"
gh crear-repo $repoName --public --description "üè¢ FIME COMPANY - Portal corporativo con automatizaci√≥n cPanel completa"
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  Usando comando est√°ndar..." -ForegroundColor Yellow
    gh repo create $repoName --public --description "üè¢ FIME COMPANY - Portal corporativo con automatizaci√≥n cPanel completa"
}

# PASO 5: Configurar remote origin
Write-Host ""
Write-Host "üîó PASO 5: CONFIGURANDO REPOSITORIO REMOTO..." -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Yellow

git remote add origin "https://github.com/$(gh api user --jq .login)/$repoName.git"
Write-Host "‚úÖ Repositorio remoto configurado" -ForegroundColor Green

# PASO 6: Subir c√≥digo a GitHub
Write-Host ""
Write-Host "‚¨ÜÔ∏è  PASO 6: SUBIENDO C√ìDIGO A GITHUB..." -ForegroundColor Cyan
Write-Host "=======================================" -ForegroundColor Yellow

git subir -u origin main
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  Usando comando est√°ndar..." -ForegroundColor Yellow
    git push -u origin main
}

# PASO 7: Configurar GitHub Actions para deployment
Write-Host ""
Write-Host "‚öôÔ∏è  PASO 7: CONFIGURANDO GITHUB ACTIONS..." -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Yellow

# Crear directorio .github/workflows si no existe
if (-not (Test-Path ".github/workflows")) {
    New-Item -ItemType Directory -Path ".github/workflows" -Force | Out-Null
}

# Crear workflow de deployment
@"
name: üöÄ Deploy FIME COMPANY a cPanel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v3
    
    - name: üöÄ Deploy v√≠a FTP a cPanel
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: fimecompany.com
        username: fimecomp
        password: `${{ secrets.CPANEL_FTP_PASSWORD }}
        local-dir: ./
        server-dir: /public_html/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.ps1
          **/*.bat
          **/*.md
          **/INSTRUCCIONES-*
          
    - name: ‚úÖ Notificar deployment exitoso
      run: |
        echo "üéâ Deployment completado exitosamente!"
        echo "üåê Sitio web: https://fimecompany.com"
        echo "üìÅ Archivos desplegados en /public_html/"
"@ | Out-File -FilePath ".github/workflows/deploy.yml" -Encoding utf8

Write-Host "‚úÖ GitHub Actions configurado" -ForegroundColor Green

# PASO 8: Commit y push del workflow
Write-Host ""
Write-Host "üì§ PASO 8: SUBIENDO CONFIGURACI√ìN DE DEPLOYMENT..." -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Yellow

git add .github/workflows/deploy.yml
git commit -m "‚öôÔ∏è Configurar GitHub Actions para deployment autom√°tico a cPanel"
git push origin main

Write-Host ""
Write-Host "üéâ ¬°DEPLOYMENT AUTOM√ÅTICO CONFIGURADO!" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "======================================" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìã PR√ìXIMOS PASOS:" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host "==================" -ForegroundColor Yellow
Write-Host "1. üîë Ir a GitHub ‚Üí Repositorio ‚Üí Settings ‚Üí Secrets" -ForegroundColor Cyan
Write-Host "2. üîê Agregar secret: CPANEL_FTP_PASSWORD" -ForegroundColor Cyan
Write-Host "3. üöÄ Cualquier push a main ‚Üí Deployment autom√°tico" -ForegroundColor Cyan
Write-Host ""
Write-Host "üåê REPOSITORIO: https://github.com/$(gh api user --jq .login)/$repoName" -ForegroundColor Green
Write-Host "üåç SITIO WEB: https://fimecompany.com" -ForegroundColor Green
Write-Host ""
Write-Host "‚ú® ¬°AUTOMATIZACI√ìN COMPLETA ACTIVADA!" -ForegroundColor Magenta

# Abrir GitHub en el navegador
Write-Host ""
Write-Host "üåê ABRIENDO GITHUB EN EL NAVEGADOR..." -ForegroundColor Cyan
Start-Process "https://github.com/$(gh api user --jq .login)/$repoName"

Read-Host "Presiona ENTER para continuar..."
