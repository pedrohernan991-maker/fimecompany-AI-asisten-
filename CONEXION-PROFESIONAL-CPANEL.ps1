#!/usr/bin/env powershell
# üè¢ FIME COMPANY - CONEXI√ìN PROFESIONAL A CPANEL
# ==============================================
# M√âTODO M√ÅS PROFESIONAL DEL MUNDO EMPRESARIAL

Write-Host ""
Write-Host "üè¢ CONEXI√ìN PROFESIONAL A CPANEL" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host "=================================" -ForegroundColor Yellow
Write-Host ""

# CONFIGURACI√ìN PROFESIONAL
$CPANEL_HOST = "fimecompany.com"
$CPANEL_USER = "fimecomp"
$SSH_PORT = "22"
$SSH_KEY = "C:\Users\PC\.ssh\id_rsa"

Write-Host "üéØ M√âTODO 1: SSH DIRECTO (M√ÅS PROFESIONAL)" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "==========================================" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìã CONFIGURACI√ìN:" -ForegroundColor Cyan
Write-Host "  üåê Host: $CPANEL_HOST" -ForegroundColor White
Write-Host "  üë§ Usuario: $CPANEL_USER" -ForegroundColor White
Write-Host "  üîå Puerto SSH: $SSH_PORT" -ForegroundColor White
Write-Host "  üîë Clave SSH: $SSH_KEY" -ForegroundColor White
Write-Host ""

# PASO 1: Verificar SSH
Write-Host "üîç PASO 1: VERIFICANDO CONEXI√ìN SSH..." -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Yellow

$sshTest = ssh -i $SSH_KEY -p $SSH_PORT $CPANEL_USER@$CPANEL_HOST "echo 'SSH OK'" 2>$null
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ SSH CONECTADO EXITOSAMENTE" -ForegroundColor Green
    $sshWorking = $true
} else {
    Write-Host "‚ùå SSH no disponible - usando m√©todos alternativos" -ForegroundColor Yellow
    $sshWorking = $false
}

Write-Host ""
Write-Host "üéØ M√âTODO 2: CPANEL API (ULTRA PROFESIONAL)" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "===========================================" -ForegroundColor Yellow

# Crear configuraci√≥n API
@"
{
    "cpanel_config": {
        "host": "$CPANEL_HOST",
        "port": 2083,
        "ssl": true,
        "username": "$CPANEL_USER",
        "api_token": "NECESITA_TOKEN_API",
        "endpoints": {
            "file_manager": "/execute/Fileman",
            "mysql": "/execute/Mysql", 
            "domains": "/execute/Park",
            "email": "/execute/Email",
            "backup": "/execute/Backup"
        }
    }
}
"@ | Out-File -FilePath "cpanel-api-config.json" -Encoding utf8

Write-Host "‚úÖ Configuraci√≥n API creada: cpanel-api-config.json" -ForegroundColor Green

Write-Host ""
Write-Host "üéØ M√âTODO 3: FTP SEGURO (SFTP)" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "==============================" -ForegroundColor Yellow

# Crear script SFTP batch
@"
#!/bin/bash
# SFTP PROFESIONAL FIME COMPANY
sftp -P $SSH_PORT $CPANEL_USER@$CPANEL_HOST << EOF
cd public_html
put -r * .
chmod 644 *.html
chmod 644 *.css
chmod 644 *.js
chmod 755 */
quit
EOF
echo "‚úÖ Archivos subidos exitosamente v√≠a SFTP"
"@ | Out-File -FilePath "upload-sftp.sh" -Encoding utf8

Write-Host "‚úÖ Script SFTP creado: upload-sftp.sh" -ForegroundColor Green

Write-Host ""
Write-Host "üéØ M√âTODO 4: GITHUB ACTIONS PROFESIONAL" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "=======================================" -ForegroundColor Yellow

# Crear workflow profesional
if (-not (Test-Path ".github/workflows")) {
    New-Item -ItemType Directory -Path ".github/workflows" -Force | Out-Null
}

@"
name: üè¢ FIME COMPANY - Deployment Profesional

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CPANEL_HOST: fimecompany.com
  CPANEL_USER: fimecomp
  DEPLOY_PATH: /public_html

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: üì• Checkout Repository
      uses: actions/checkout@v4
      
    - name: üîç Validate Files
      run: |
        echo "üîç Validando archivos HTML..."
        find . -name "*.html" -exec echo "‚úÖ {}" \;
        
    - name: üöÄ Deploy via SFTP
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
        server: fimecompany.com
        port: 22
        username: fimecomp
        password: \${{ secrets.CPANEL_PASSWORD }}
        local_path: './c panel/*'
        remote_path: '/public_html'
        sftp_only: true
        
    - name: üîß Set Permissions
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: fimecompany.com
        username: fimecomp
        key: \${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd public_html
          find . -type f -name "*.html" -exec chmod 644 {} \;
          find . -type f -name "*.css" -exec chmod 644 {} \;
          find . -type f -name "*.js" -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          
    - name: ‚úÖ Verify Deployment
      run: |
        echo "üåê Verificando: https://fimecompany.com"
        curl -I https://fimecompany.com
        
    - name: üìß Notify Success
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'üéâ FIME COMPANY desplegado exitosamente!'
      env:
        SLACK_WEBHOOK_URL: \${{ secrets.SLACK_WEBHOOK }}
"@ | Out-File -FilePath ".github/workflows/professional-deploy.yml" -Encoding utf8

Write-Host "‚úÖ GitHub Actions profesional creado" -ForegroundColor Green

Write-Host ""
Write-Host "üéØ M√âTODO 5: RSYNC PROFESIONAL" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "==============================" -ForegroundColor Yellow

# Crear script rsync
@"
#!/bin/bash
# RSYNC PROFESIONAL FIME COMPANY

echo "üöÄ Iniciando sincronizaci√≥n profesional..."

rsync -avz --delete \
  --exclude='.git*' \
  --exclude='*.ps1' \
  --exclude='*.bat' \
  --exclude='*.md' \
  --exclude='INSTRUCCIONES*' \
  --progress \
  -e "ssh -p $SSH_PORT -i $SSH_KEY" \
  ./ $CPANEL_USER@$CPANEL_HOST:public_html/

echo "‚úÖ Sincronizaci√≥n completada exitosamente"
echo "üåê Sitio web: https://fimecompany.com"
"@ | Out-File -FilePath "sync-professional.sh" -Encoding utf8

Write-Host "‚úÖ Script Rsync profesional creado" -ForegroundColor Green

Write-Host ""
Write-Host "üéØ M√âTODO 6: CPANEL UAPI (ENTERPRISE)" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "====================================" -ForegroundColor Yellow

# Crear cliente UAPI
@"
#!/usr/bin/env powershell
# CLIENTE CPANEL UAPI PROFESIONAL

param(
    [Parameter(Mandatory=\$true)]
    [string]\$Action,
    
    [Parameter(Mandatory=\$false)]
    [string]\$Module = "Fileman",
    
    [Parameter(Mandatory=\$false)]
    [hashtable]\$Parameters = @{}
)

\$cPanelHost = "fimecompany.com"
\$cPanelUser = "fimecomp" 
\$apiToken = \$env:CPANEL_API_TOKEN

if (-not \$apiToken) {
    Write-Error "‚ùå Falta CPANEL_API_TOKEN en variables de entorno"
    exit 1
}

\$uri = "https://\$cPanelHost:2083/execute/\$Module/\$Action"
\$headers = @{
    "Authorization" = "cpanel \$cPanelUser:\$apiToken"
    "Content-Type" = "application/x-www-form-urlencoded"
}

try {
    \$response = Invoke-RestMethod -Uri \$uri -Method POST -Headers \$headers -Body \$Parameters
    Write-Host "‚úÖ UAPI Response:" -ForegroundColor Green
    \$response | ConvertTo-Json -Depth 10
} catch {
    Write-Error "‚ùå Error UAPI: \$(\$_.Exception.Message)"
}
"@ | Out-File -FilePath "cpanel-uapi-client.ps1" -Encoding utf8

Write-Host "‚úÖ Cliente UAPI profesional creado" -ForegroundColor Green

Write-Host ""
Write-Host "üèÜ RESUMEN DE CONEXIONES PROFESIONALES" -ForegroundColor White -BackgroundColor DarkMagenta
Write-Host "======================================" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. üîê SSH Directo" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ M√°s r√°pido y seguro" -ForegroundColor White
Write-Host "   ‚Ä¢ Control total del servidor" -ForegroundColor White
Write-Host ""
Write-Host "2. üåê cPanel UAPI" -ForegroundColor Cyan  
Write-Host "   ‚Ä¢ Acceso program√°tico total" -ForegroundColor White
Write-Host "   ‚Ä¢ Gesti√≥n completa desde c√≥digo" -ForegroundColor White
Write-Host ""
Write-Host "3. üöÄ GitHub Actions" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Deployment autom√°tico" -ForegroundColor White
Write-Host "   ‚Ä¢ CI/CD profesional" -ForegroundColor White
Write-Host ""
Write-Host "4. üìÅ SFTP/Rsync" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Sincronizaci√≥n incremental" -ForegroundColor White
Write-Host "   ‚Ä¢ M√°ximo rendimiento" -ForegroundColor White
Write-Host ""

Write-Host "üéØ RECOMENDACI√ìN PROFESIONAL:" -ForegroundColor Yellow -BackgroundColor DarkRed
Write-Host "=============================" -ForegroundColor Yellow
Write-Host "‚ú® Usar GitHub Actions + SSH para m√°xima profesionalidad" -ForegroundColor Green
Write-Host "‚ú® Configurar UAPI para gesti√≥n avanzada" -ForegroundColor Green
Write-Host "‚ú® SFTP para uploads manuales r√°pidos" -ForegroundColor Green

Write-Host ""
Write-Host "üìã PR√ìXIMOS PASOS:" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host "=================" -ForegroundColor Yellow
Write-Host "1. üîë Generar API Token en cPanel" -ForegroundColor Cyan
Write-Host "2. üîê Configurar SSH keys" -ForegroundColor Cyan  
Write-Host "3. üöÄ Activar GitHub Actions" -ForegroundColor Cyan
Write-Host "4. ‚úÖ Probar conexi√≥n profesional" -ForegroundColor Cyan

Read-Host "Presiona ENTER para continuar..."
