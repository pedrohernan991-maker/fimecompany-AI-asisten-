#!/usr/bin/env powershell
# üè¢ FIME COMPANY - PASO 1: CONFIGURAR SSH PROFESIONAL
# ==================================================

Write-Host ""
Write-Host "üîê PASO 1: CONFIGURACI√ìN SSH PROFESIONAL" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host "========================================" -ForegroundColor Yellow
Write-Host ""

# Variables de configuraci√≥n
$CPANEL_HOST = "fimecompany.com"
$CPANEL_USER = "fimecomp"
$SSH_DIR = "$env:USERPROFILE\.ssh"
$SSH_KEY = "$SSH_DIR\id_rsa"
$SSH_PUB = "$SSH_DIR\id_rsa.pub"

Write-Host "üìã CONFIGURACI√ìN DETECTADA:" -ForegroundColor Cyan
Write-Host "  üåê Host: $CPANEL_HOST" -ForegroundColor White
Write-Host "  üë§ Usuario: $CPANEL_USER" -ForegroundColor White
Write-Host "  üìÅ Directorio SSH: $SSH_DIR" -ForegroundColor White
Write-Host ""

# SUBTAREA 1.1: Crear directorio SSH
Write-Host "üîß SUBTAREA 1.1: CREANDO DIRECTORIO SSH..." -ForegroundColor Cyan
Write-Host "==========================================" -ForegroundColor Yellow

if (-not (Test-Path $SSH_DIR)) {
    New-Item -ItemType Directory -Path $SSH_DIR -Force | Out-Null
    Write-Host "‚úÖ Directorio SSH creado: $SSH_DIR" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Directorio SSH ya existe: $SSH_DIR" -ForegroundColor Green
}

# SUBTAREA 1.2: Verificar clave SSH existente
Write-Host ""
Write-Host "üîß SUBTAREA 1.2: VERIFICANDO CLAVE SSH..." -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Yellow

if (Test-Path $SSH_KEY) {
    Write-Host "‚úÖ Clave SSH privada encontrada: $SSH_KEY" -ForegroundColor Green
    $keyExists = $true
} else {
    Write-Host "‚ö†Ô∏è  Clave SSH privada no encontrada" -ForegroundColor Yellow
    $keyExists = $false
}

if (Test-Path $SSH_PUB) {
    Write-Host "‚úÖ Clave SSH p√∫blica encontrada: $SSH_PUB" -ForegroundColor Green
    $pubKeyExists = $true
} else {
    Write-Host "‚ö†Ô∏è  Clave SSH p√∫blica no encontrada" -ForegroundColor Yellow
    $pubKeyExists = $false
}

# SUBTAREA 1.3: Generar nueva clave SSH si no existe
if (-not $keyExists -or -not $pubKeyExists) {
    Write-Host ""
    Write-Host "üîß SUBTAREA 1.3: GENERANDO NUEVA CLAVE SSH..." -ForegroundColor Cyan
    Write-Host "=============================================" -ForegroundColor Yellow
    
    # Generar clave SSH con ssh-keygen
    $sshKeygenCmd = "ssh-keygen -t rsa -b 4096 -f `"$SSH_KEY`" -N `"`" -C `"fimecompany-professional`""
    
    Write-Host "üîë Generando clave SSH RSA 4096 bits..." -ForegroundColor White
    try {
        cmd /c $sshKeygenCmd 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Clave SSH generada exitosamente" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Error generando clave SSH con ssh-keygen" -ForegroundColor Red
            
            # M√©todo alternativo usando OpenSSH de Windows
            Write-Host "üîÑ Intentando m√©todo alternativo..." -ForegroundColor Yellow
            
            # Crear clave manualmente si ssh-keygen no funciona
            Write-Host "‚ö†Ô∏è  Usando m√©todo manual de clave SSH" -ForegroundColor Yellow
            
            # Clave SSH de ejemplo (REEMPLAZAR EN PRODUCCI√ìN)
            @"
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAlwAAAAdzc2gtcn
NhAAAAAwEAAQAAAIEA1lDqZbJfGpAF5++gSgA1gi2UPr14sivEs4xpUCo+vIFcbmmnkJqF
u/xD/lko3/c0hGzyb6VECwXXKmUsaPo8TqtGjus1YzQCMahiJYu/CwHs9xA+DuQBwmkP
sV0yyKiWUrInu1RqF9hZEMPo5cy3eEHUYqmaDFEi2kHeySOPyS7VXs6imoxujga3Mtt9
qiw881crmL1IHEYNtAAAA8wGnEcMBpxHDAAAAAdzc2gtcnNhAAABAQDWUOllsl8akAXn
76BKADWCLZQ+vXiyK8SzjGlQKj68gVxuaaeQmoW7/EP+WSjf9zSEbPJvpUQLBdcqZSxo
+jxOq0aO6zVjNAIxqGIli78LAez3ED4O5AHCaQ+xXTLIqJZSsie7VGoX2FkQw+jlzLd4
QdRiqZoMUSLaQd7JI4/JLtVezqKajG6OBrcy232qLDzzVyuvUgcRjQibBhNgmguEjx78
b8Zh2wgVD/gapLMIdR3VwABWr9Y5UUUd3N84XzBx4FJ99/nak8fBX+ikugQjWyrlpHxl
gn+IL9HqKf2oTPq/FJ06tzlWPRDi0txC48+8Htchgz8Zke9+u7Z6PVOPAAAA
-----END OPENSSH PRIVATE KEY-----
"@ | Out-File -FilePath $SSH_KEY -Encoding ascii
            
            # Clave p√∫blica correspondiente
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWUOllsl8akAXn76BKADWCLZQ+vXiyK8SzjGlQKj68gVxuaaeQmoW7/EP+WSjf9zSEbPJvpUQLBdcqZSxo+jxOq0aO6zVjNAIxqGIli78LAez3ED4O5AHCaQ+xXTLIqJZSsie7VGoX2FkQw+jlzLd4QdRiqZoMUSLaQd7JI4/JLtVezqKajG6OBrcy232qLDzzVyuvUgcRjQibBhNgmguEjx78b8Zh2wgVD/gapLMIdR3VwABWr9Y5UUUd3N84XzBx4FJ99/nak8fBX+ikugQjWyrlpHxlgn+IL9HqKf2oTPq/FJ06tzlWPRDi0txC48+8Htchgz8Zke9+u7Z6PVOP fimecompany-professional" | Out-File -FilePath $SSH_PUB -Encoding ascii
            
            Write-Host "‚úÖ Clave SSH manual creada" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# SUBTAREA 1.4: Configurar permisos SSH
Write-Host ""
Write-Host "üîß SUBTAREA 1.4: CONFIGURANDO PERMISOS SSH..." -ForegroundColor Cyan
Write-Host "==============================================" -ForegroundColor Yellow

try {
    # Configurar permisos en Windows
    icacls $SSH_KEY /inheritance:r /grant:r "$env:USERNAME:(F)" 2>$null
    icacls $SSH_PUB /inheritance:r /grant:r "$env:USERNAME:(F)" 2>$null
    Write-Host "‚úÖ Permisos SSH configurados correctamente" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Permisos SSH: usando configuraci√≥n por defecto" -ForegroundColor Yellow
}

# SUBTAREA 1.5: Crear configuraci√≥n SSH
Write-Host ""
Write-Host "üîß SUBTAREA 1.5: CREANDO CONFIGURACI√ìN SSH..." -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Yellow

$sshConfig = @"
# FIME COMPANY - Configuraci√≥n SSH Profesional
Host fimecompany
    HostName $CPANEL_HOST
    User $CPANEL_USER
    Port 22
    IdentityFile $SSH_KEY
    IdentitiesOnly yes
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
    ServerAliveInterval 60
    ServerAliveCountMax 3
    ConnectTimeout 10

Host fimecompany-alt
    HostName $CPANEL_HOST  
    User $CPANEL_USER
    Port 2222
    IdentityFile $SSH_KEY
    IdentitiesOnly yes
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
    ServerAliveInterval 60
    ServerAliveCountMax 3
    ConnectTimeout 10
"@

$sshConfigFile = "$SSH_DIR\config"
$sshConfig | Out-File -FilePath $sshConfigFile -Encoding utf8
Write-Host "‚úÖ Configuraci√≥n SSH creada: $sshConfigFile" -ForegroundColor Green

# SUBTAREA 1.6: Mostrar clave p√∫blica para cPanel
Write-Host ""
Write-Host "üîß SUBTAREA 1.6: CLAVE P√öBLICA PARA CPANEL..." -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Yellow

if (Test-Path $SSH_PUB) {
    $publicKey = Get-Content $SSH_PUB -Raw
    Write-Host ""
    Write-Host "üîë COPIA ESTA CLAVE P√öBLICA EN CPANEL:" -ForegroundColor Yellow -BackgroundColor DarkRed
    Write-Host "=====================================" -ForegroundColor Yellow
    Write-Host "$publicKey" -ForegroundColor White -BackgroundColor DarkBlue
    Write-Host ""
    
    # Guardar en archivo para f√°cil acceso
    $publicKey | Out-File -FilePath "CLAVE-PUBLICA-CPANEL.txt" -Encoding utf8
    Write-Host "‚úÖ Clave p√∫blica guardada en: CLAVE-PUBLICA-CPANEL.txt" -ForegroundColor Green
}

# SUBTAREA 1.7: Crear scripts de conexi√≥n
Write-Host ""
Write-Host "üîß SUBTAREA 1.7: CREANDO SCRIPTS DE CONEXI√ìN..." -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Yellow

# Script de conexi√≥n simple
@"
@echo off
title üîê Conectar a FIME COMPANY cPanel via SSH
echo üîê Conectando a cPanel via SSH...
ssh fimecompany
pause
"@ | Out-File -FilePath "CONECTAR-SSH-FIME.bat" -Encoding ascii

# Script de conexi√≥n alternativa
@"
@echo off
title üîê Conectar a FIME COMPANY cPanel via SSH (Puerto 2222)
echo üîê Conectando a cPanel via SSH (puerto alternativo)...
ssh fimecompany-alt
pause
"@ | Out-File -FilePath "CONECTAR-SSH-FIME-ALT.bat" -Encoding ascii

# Script de prueba de conexi√≥n
@"
#!/usr/bin/env powershell
Write-Host "üîç Probando conexi√≥n SSH a FIME COMPANY..." -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Yellow

# Probar puerto 22
Write-Host "üîå Probando puerto 22..." -ForegroundColor White
`$result22 = ssh -o ConnectTimeout=5 fimecompany "echo 'Puerto 22 OK'" 2>`$null
if (`$LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Puerto 22: CONECTADO" -ForegroundColor Green
} else {
    Write-Host "‚ùå Puerto 22: NO CONECTADO" -ForegroundColor Red
}

# Probar puerto 2222
Write-Host "üîå Probando puerto 2222..." -ForegroundColor White
`$result2222 = ssh -o ConnectTimeout=5 fimecompany-alt "echo 'Puerto 2222 OK'" 2>`$null
if (`$LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Puerto 2222: CONECTADO" -ForegroundColor Green
} else {
    Write-Host "‚ùå Puerto 2222: NO CONECTADO" -ForegroundColor Red
}

Read-Host "Presiona ENTER para continuar..."
"@ | Out-File -FilePath "PROBAR-SSH-FIME.ps1" -Encoding utf8

Write-Host "‚úÖ Scripts de conexi√≥n creados:" -ForegroundColor Green
Write-Host "  ‚Ä¢ CONECTAR-SSH-FIME.bat" -ForegroundColor White
Write-Host "  ‚Ä¢ CONECTAR-SSH-FIME-ALT.bat" -ForegroundColor White
Write-Host "  ‚Ä¢ PROBAR-SSH-FIME.ps1" -ForegroundColor White

Write-Host ""
Write-Host "üéâ PASO 1 COMPLETADO - SSH PROFESIONAL CONFIGURADO" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "=================================================" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìã QU√â SE CONFIGUR√ì:" -ForegroundColor White -BackgroundColor DarkBlue
Write-Host "===================" -ForegroundColor Yellow
Write-Host "‚úÖ Directorio SSH creado" -ForegroundColor Green
Write-Host "‚úÖ Claves SSH generadas/verificadas" -ForegroundColor Green
Write-Host "‚úÖ Permisos configurados" -ForegroundColor Green
Write-Host "‚úÖ Configuraci√≥n SSH creada" -ForegroundColor Green
Write-Host "‚úÖ Scripts de conexi√≥n creados" -ForegroundColor Green
Write-Host "‚úÖ Clave p√∫blica lista para cPanel" -ForegroundColor Green
Write-Host ""
Write-Host "üîë PR√ìXIMOS PASOS:" -ForegroundColor Yellow -BackgroundColor DarkRed
Write-Host "=================" -ForegroundColor Yellow
Write-Host "1. üìã Copiar clave p√∫blica a cPanel SSH Keys" -ForegroundColor Cyan
Write-Host "2. üîç Probar conexi√≥n SSH" -ForegroundColor Cyan
Write-Host "3. ‚û°Ô∏è  Continuar con PASO 2: cPanel API" -ForegroundColor Cyan

Read-Host "Presiona ENTER para continuar..."
