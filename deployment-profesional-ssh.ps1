# ===============================================
# DEPLOYMENT PROFESIONAL CON SSH - FIME COMPANY
# Configuraci√≥n completa automatizada
# ===============================================

Write-Host "üöÄ DEPLOYMENT PROFESIONAL CON SSH" -ForegroundColor Cyan -BackgroundColor DarkBlue
Write-Host "==================================" -ForegroundColor Yellow

# Configuraci√≥n SSH
$SSH_HOST = "fimecompany.com"
$SSH_USER = "fimecomp"
$SSH_KEY = "$env:USERPROFILE\.ssh\fimecompany_key"
$REMOTE_PATH = "/public_html"
$LOCAL_PATH = "C:\Users\PC\.android\c panel"

Write-Host "üîë Configuraci√≥n SSH:" -ForegroundColor Green
Write-Host "   Host: $SSH_HOST" -ForegroundColor White
Write-Host "   Usuario: $SSH_USER" -ForegroundColor White
Write-Host "   Clave: $SSH_KEY" -ForegroundColor White
Write-Host "   Destino: $REMOTE_PATH" -ForegroundColor White

# Funci√≥n para probar conexi√≥n SSH
function Test-SSHConnection {
    Write-Host "üîç Probando conexi√≥n SSH..." -ForegroundColor Yellow
    
    try {
        # Probar conexi√≥n con ssh
        $result = ssh -i "$SSH_KEY" "$SSH_USER@$SSH_HOST" "pwd" 2>&1
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Conexi√≥n SSH exitosa" -ForegroundColor Green
            Write-Host "üìÅ Directorio remoto: $result" -ForegroundColor Cyan
            return $true
        } else {
            Write-Host "‚ùå Error de conexi√≥n SSH: $result" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# Funci√≥n para subir archivos via SCP
function Upload-FilesSSH {
    Write-Host "üì§ Subiendo archivos via SSH/SCP..." -ForegroundColor Green
    
    # Archivos principales
    $files = @(
        "index.html",
        "styles.css"
    )
    
    # Subir archivos principales
    foreach ($file in $files) {
        if (Test-Path "$LOCAL_PATH\$file") {
            Write-Host "üìÑ Subiendo $file..." -ForegroundColor Yellow
            scp -i "$SSH_KEY" "$LOCAL_PATH\$file" "$SSH_USER@$SSH_HOST`:$REMOTE_PATH/"
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ $file subido exitosamente" -ForegroundColor Green
            } else {
                Write-Host "‚ùå Error subiendo $file" -ForegroundColor Red
            }
        }
    }
    
    # Subir carpetas
    $folders = @("fimetech", "fimekids", "ferreteria", "constructora", "energia", "global", "imprexlaser", "inversiones")
    
    foreach ($folder in $folders) {
        if (Test-Path "$LOCAL_PATH\$folder") {
            Write-Host "üìÅ Subiendo carpeta $folder..." -ForegroundColor Yellow
            scp -r -i "$SSH_KEY" "$LOCAL_PATH\$folder" "$SSH_USER@$SSH_HOST`:$REMOTE_PATH/"
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ Carpeta $folder subida exitosamente" -ForegroundColor Green
            } else {
                Write-Host "‚ùå Error subiendo carpeta $folder" -ForegroundColor Red
            }
        }
    }
}

# Funci√≥n para configurar permisos remotos
function Set-RemotePermissions {
    Write-Host "üîß Configurando permisos remotos..." -ForegroundColor Green
    
    $commands = @(
        "chmod 755 $REMOTE_PATH",
        "chmod -R 755 $REMOTE_PATH/fimetech",
        "chmod -R 755 $REMOTE_PATH/fimekids", 
        "chmod -R 755 $REMOTE_PATH/ferreteria",
        "chmod 644 $REMOTE_PATH/*.html",
        "chmod 644 $REMOTE_PATH/*.css",
        "chmod 644 $REMOTE_PATH/*.js"
    )
    
    foreach ($cmd in $commands) {
        Write-Host "‚öôÔ∏è Ejecutando: $cmd" -ForegroundColor Yellow
        ssh -i "$SSH_KEY" "$SSH_USER@$SSH_HOST" "$cmd"
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Comando ejecutado exitosamente" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Advertencia en comando: $cmd" -ForegroundColor Yellow
        }
    }
}

# Funci√≥n para crear estructura de directorios
function Create-RemoteStructure {
    Write-Host "üìÅ Creando estructura de directorios..." -ForegroundColor Green
    
    $directories = @(
        "$REMOTE_PATH/fimetech",
        "$REMOTE_PATH/fimekids", 
        "$REMOTE_PATH/ferreteria",
        "$REMOTE_PATH/constructora",
        "$REMOTE_PATH/energia",
        "$REMOTE_PATH/global",
        "$REMOTE_PATH/imprexlaser",
        "$REMOTE_PATH/inversiones",
        "$REMOTE_PATH/assets",
        "$REMOTE_PATH/css",
        "$REMOTE_PATH/js",
        "$REMOTE_PATH/images"
    )
    
    foreach ($dir in $directories) {
        Write-Host "üìÇ Creando directorio: $dir" -ForegroundColor Yellow
        ssh -i "$SSH_KEY" "$SSH_USER@$SSH_HOST" "mkdir -p $dir"
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Directorio creado: $dir" -ForegroundColor Green
        }
    }
}

# Funci√≥n para verificar sitio web
function Test-Website {
    Write-Host "üåê Verificando sitio web..." -ForegroundColor Green
    
    $urls = @(
        "https://fimecompany.com",
        "https://fimecompany.com/fimetech/",
        "https://fimecompany.com/fimekids/",
        "https://fimecompany.com/ferreteria/"
    )
    
    foreach ($url in $urls) {
        Write-Host "üîç Probando: $url" -ForegroundColor Yellow
        
        try {
            $response = Invoke-WebRequest -Uri $url -Method Head -TimeoutSec 10
            
            if ($response.StatusCode -eq 200) {
                Write-Host "‚úÖ $url - OK (200)" -ForegroundColor Green
            } else {
                Write-Host "‚ö†Ô∏è $url - C√≥digo: $($response.StatusCode)" -ForegroundColor Yellow
            }
        } catch {
            Write-Host "‚ùå $url - Error: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
}

# Funci√≥n principal de deployment
function Start-ProfessionalDeployment {
    Write-Host ""
    Write-Host "üöÄ INICIANDO DEPLOYMENT PROFESIONAL" -ForegroundColor Cyan -BackgroundColor DarkBlue
    Write-Host "====================================" -ForegroundColor Yellow
    
    # Paso 1: Probar conexi√≥n SSH
    Write-Host "üî∏ Paso 1: Probando conexi√≥n SSH..." -ForegroundColor Cyan
    if (!(Test-SSHConnection)) {
        Write-Host "‚ùå Error: No se pudo conectar via SSH" -ForegroundColor Red
        Write-Host "üîß Verifica que la clave SSH est√© agregada y autorizada en cPanel" -ForegroundColor Yellow
        return $false
    }
    
    # Paso 2: Crear estructura de directorios
    Write-Host "üî∏ Paso 2: Creando estructura remota..." -ForegroundColor Cyan
    Create-RemoteStructure
    
    # Paso 3: Subir archivos
    Write-Host "üî∏ Paso 3: Subiendo archivos..." -ForegroundColor Cyan
    Upload-FilesSSH
    
    # Paso 4: Configurar permisos
    Write-Host "üî∏ Paso 4: Configurando permisos..." -ForegroundColor Cyan
    Set-RemotePermissions
    
    # Paso 5: Verificar sitio
    Write-Host "üî∏ Paso 5: Verificando sitio web..." -ForegroundColor Cyan
    Test-Website
    
    Write-Host ""
    Write-Host "üéâ ¬°DEPLOYMENT PROFESIONAL COMPLETADO!" -ForegroundColor Green -BackgroundColor DarkGreen
    Write-Host "======================================" -ForegroundColor Yellow
    Write-Host "‚úÖ Archivos subidos via SSH" -ForegroundColor Green
    Write-Host "‚úÖ Permisos configurados" -ForegroundColor Green
    Write-Host "‚úÖ Estructura creada" -ForegroundColor Green
    Write-Host "‚úÖ Sitio web verificado" -ForegroundColor Green
    
    return $true
}

# Funci√≥n para configurar automatizaci√≥n continua
function Setup-ContinuousDeployment {
    Write-Host "üîÑ Configurando deployment continuo..." -ForegroundColor Cyan
    
    # Crear script de sincronizaci√≥n autom√°tica
    $syncScript = @"
#!/bin/bash
# Script de sincronizaci√≥n autom√°tica
rsync -avz --delete -e "ssh -i ~/.ssh/fimecompany_key" \\
    "$LOCAL_PATH/" "$SSH_USER@$SSH_HOST:$REMOTE_PATH/"
echo "‚úÖ Sincronizaci√≥n completada: `$(date)"
"@
    
    $syncScript | Out-File -FilePath "sync-to-cpanel.sh" -Encoding UTF8
    
    Write-Host "‚úÖ Script de sincronizaci√≥n creado: sync-to-cpanel.sh" -ForegroundColor Green
}

Write-Host ""
Write-Host "üìã COMANDOS DISPONIBLES:" -ForegroundColor Yellow
Write-Host "========================" -ForegroundColor Yellow
Write-Host "üöÄ Start-ProfessionalDeployment  # Deployment completo" -ForegroundColor White
Write-Host "üîç Test-SSHConnection           # Probar SSH" -ForegroundColor White  
Write-Host "üì§ Upload-FilesSSH              # Subir archivos" -ForegroundColor White
Write-Host "üîß Set-RemotePermissions        # Configurar permisos" -ForegroundColor White
Write-Host "üåê Test-Website                 # Verificar sitio" -ForegroundColor White
Write-Host "üîÑ Setup-ContinuousDeployment   # Automatizaci√≥n" -ForegroundColor White

Write-Host ""
Write-Host "üéØ PARA INICIAR DEPLOYMENT PROFESIONAL:" -ForegroundColor Green
Write-Host "Start-ProfessionalDeployment" -ForegroundColor Yellow
